import { createClient } from '@supabase/supabase-js';

// Get environment variables
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://your-project.supabase.co';
const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'your-anon-key';

const supabase = createClient(supabaseUrl, supabaseKey);

async function fixQuotationAssignment() {
  console.log('üîß Fixing quotation assignment to Vikas...');
  
  try {
    // Update the quotation to assign created_by to Vikas (ID "87")
    const { data: updatedQuotation, error: updateError } = await supabase
      .from('quotations')
      .update({ 
        created_by: "87",  // Assign to Vikas's actual employee ID as string
        status: 'pending_approval'  // Change status from draft
      })
      .eq('id', 19)
      .select();
      
    if (updateError) {
      console.error('‚ùå Error updating quotation:', updateError);
      return;
    }
    
    console.log('‚úÖ Updated quotation:', updatedQuotation);
    
    // Verify the fix
    const { data: verification } = await supabase
      .from('quotations')
      .select('id, client_name, total_amount, status, created_by')
      .eq('id', 19)
      .single();
      
    console.log('üîç Verification after fix:', verification);
    
    console.log('\nüéØ EXPECTED RESULT:');
    console.log('  ‚Ä¢ created_by should be "87" ‚úÖ');
    console.log('  ‚Ä¢ status should be "pending_approval" ‚úÖ');
    console.log('  ‚Ä¢ Team Performance should now show ‚Çπ43,500 for Vikas ‚úÖ');
    
  } catch (error) {
    console.error('‚ùå Script error:', error);
  }
}

fixQuotationAssignment(); 